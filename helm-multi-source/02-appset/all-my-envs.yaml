apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: all-my-envs
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
  - list:
      elements:
      - env: qa
        region: us  
        type: non-prod   
        version: qa     
      - env: staging-asia
        region: asia
        type: non-prod  
        version: staging       
      - env: staging-eu
        region: eu
        type: non-prod  
        version: staging       
      - env: staging-us
        region: us
        type: non-prod  
        version: staging       
      - env: prod-eu
        region: eu  
        type: prod  
        version: prod       
      - env: prod-us
        region: us 
        type: prod
        version: prod
      - env: integration-gpu
        region: us
        type: non-prod
        version: qa
      - env: integration-non-gpu
        region: us
        type: non-prod
        version: qa
  template:      
    metadata:
      name: '{{.env}}' 
    spec:
      # The project the application belongs to.
      project: default

      sources:
        - repoURL: https://github.com/zenolis/gitops-cert-level-3-examples.git
          path: helm-multi-source/my-chart
          targetRevision: HEAD
          helm:
            valueFiles:
            - $values/helm-multi-source/my-values/common-values.yaml          
            - $values/helm-multi-source/my-values/app-version/{{.version}}-values.yaml               
            - $values/helm-multi-source/my-values/env-type/{{.type}}-values.yaml  
            - $values/helm-multi-source/my-values/regions/{{.region}}-values.yaml                
            - $values/helm-multi-source/my-values/envs/{{.env}}-values.yaml
        - repoURL: 'https://github.com/codefresh-contrib/gitops-cert-level-3-examples.git'
          targetRevision: HEAD
          ref: values
      
      # Destination cluster and namespace to deploy the application
      destination:
        server: https://kubernetes.default.svc
        namespace: '{{.env}}'

      # Sync policy
      syncPolicy:
        syncOptions:
          - CreateNamespace=true  
        automated: 
          prune: true 
          selfHeal: true 
      
